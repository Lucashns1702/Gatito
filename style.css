*{
    padding: 0px;
    margin: 0px;
    box-sizing: border-box;
    font-family: "Poppins", serif;
}

header{
     
border: 1px solid blue;
display: flex;


}
nav{
    width: 80%;
    height: 10vh;
    border: 1px solid blue;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 25px;
    background-color: blue;
}

nav a{
    font-size: 30px;
    text-decoration: none;
    color:black ;
}


.pato{

    width: 20%;
    height: 10vh;
    border: 1px solid blue;
    background-color:blue ;

}

.pato div{

    width: 100%;
    height:  100%;

}
.pato div img {

    width: 100%;
    height: 100%;
    object-fit: contain;

}


/*
margin = remover margem, a div so se mexe normalmente usa %
padding = ele cresce a div , e empurra outras divs remover paddin inicial e a margin normalmente usa %
box-sizing : border-box; = ela respeita o div dominante
height = altura do site, usar vh ex 100vh
width = largura do site usar %
background color= mudar cor do fundo
min heigth = se o elemento filho for maior que ele faz ele crescer
color = muda cor da fonte 
border : sintaxe = tamanho em pixel, formato da borda ex: solid, cor
display: flex = coloca as div filhas uma do lado da outra e de um arsenal de alinhamentos 
flex-direction: -se usar row linhas ou column em colunas
justify-content = alinha o texto horizintal ex justify-content: center (precisa do display flex pra usar);
align-items = alinha o texto na vertical ex align-items: center (precisa do display flex pra usar);
gap = da espaçamento entra as div filha (precisa do display flex pra usar)
para chamar uma classe se usa . ex .sigma para chamar um id usa #
justify-content: space-around = espaça igualmente dentro da div mais voltado pro centro
justify-content: space-between = joga pras extremidades


*/